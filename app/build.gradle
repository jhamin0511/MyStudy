plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'io.gitlab.arturbosch.detekt'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

apply from: rootProject.file('./app.gradle')

android {
    defaultConfig {
        applicationId "com.github.jhamin0511.mystudy"
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation 'com.google.android.material:material:1.6.1'

    // region Kotlin
    def kotlin_version = "1.7.10"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    def coroutines_version = "1.6.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    // endregion

    // region Test
    // # Mockito
    def mockito_version = '3.7.7'
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "org.mockito:mockito-android:$mockito_version"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.8'
    testImplementation "androidx.test.ext:truth:1.4.0"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "androidx.test:core-ktx:1.4.0"
    testImplementation "androidx.test.ext:junit-ktx:1.1.3"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.3"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    // endregion

    // region Android X
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // # Activity
    def activity_version = "1.4.0"
    implementation "androidx.activity:activity-ktx:$activity_version"

    // # Fragment
    def fragment_version = "1.4.1"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    // # Lifecycle
    def lifecycle_version = "2.4.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    // # Navigation
    def nav_version = "2.4.2"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    // # RecyclerView
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"

    // # Paging
    def paging_version = "3.1.1"
    implementation "androidx.paging:paging-runtime:$paging_version"
    testImplementation "androidx.paging:paging-common:$paging_version"

    // # Room
    def room_version = "2.4.2"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    // endregion

    // region Dependency Injection
    def hilt_version = '2.42'
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    // For instrumentation tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hilt_version"
    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$hilt_version"
    // endregion

    // region Retrofit
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofit_version"
    def okhttp_version = "4.9.3"
    implementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    // endregion

    // region Logging
    implementation 'com.jakewharton.timber:timber:5.0.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'
    // endregion

    // region Image
    implementation 'com.makeramen:roundedimageview:2.3.0'
    // endregion
}

kapt {
    correctErrorTypes true
}

tasks.named("detekt").configure {
    reports {
        html.required.set(true)
        html.outputLocation.set(file("build/reports/detekt/detekt.html"))
        xml.required.set(false)
        txt.required.set(false)
        sarif.required.set(false)
    }
}
